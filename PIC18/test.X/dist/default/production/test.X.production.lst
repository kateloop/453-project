

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Tue Apr 17 17:05:59 2012

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F2682
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	3
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109  000000                     ISR@direction	equ	??_ISR+0
   110                           	global	ISR@direction
   111                           ;Data sizes: Strings 0, constant 16, data 0, bss
                                  0, persistent 0 stack 19
   112                           	global	_main
   113                           	global	??_main
   114                           	global	?_main
   115                           
   116                           ; *************** function _main ***************
                                 **
   117                           ; Defined at:
   118                           ;		line 15 in file "../iodemo.c"
   119                           ; Parameters:
   120                           ;		None
   121                           ; Auto variables:
   122                           ;		None
   123                           ; Return value:
   124                           ;		type: void 
   125                           ;		size: 0
   126                           ; Registers used:
   127                           ;		wreg, status,2, status,0, tblptrl, tblptrh, t
                                 blptru, tablat, cstack
   128                           ; Tracked objects:
   129                           ;		On entry : 0/0
   130                           ;		On exit  : 0/0
   131                           ;		Unchanged: 0/0
   132                           ; Data sizes:
   133                           ;		Autos:    0
   134                           ;		Params:   0
   135                           ;		Temp:     0
   136                           ;		Total:    0
   137                           ; This function calls:
   138                           ;		_init
   139                           ;		_update_ports
   140                           ; This function is called by:
   141                           ;		Startup code after reset
   142                           ; This function uses a non-reentrant model
   143                           ; 
   144                                   psect   text0,class=CODE,space=0,reloc=2
   145                           
   146                           	opt lm
   147                           	file	"../iodemo.c"
   148                           	line	15
   149  000000                     	__size_of_main	equ	__end_of_main-_main
   150                           ;iodemo.c: 10: const unsigned char LEDDISPLAY[]=
                                 {0xF8,0xF1,0xE3,0xC7,0x8F,0x1F,0x3E,0x7C,0xF8,0x
                                 F1,0xE3,0xC7,0x8F,0x1F,0x3E,0x7C};
   151                           ;iodemo.c: 12: unsigned char A;
   152                           ;iodemo.c: 14: void main(void)
   153                           ;iodemo.c: 15: {
   154                           	
   155  000E6C                     _main:		; BSR set to: ?
   156                           
   157                           	opt stack 30
   158                           	line	16
   159                           ;iodemo.c: 16: init();
   160  000E6C  EC48  F007         	call	_init	;wreg free
   161                           	line	20
   162                           ;iodemo.c: 20: while(1)
   163                           	
   164  000E70                     l860:		; BSR set to: ?
   165                           
   166                           	line	22
   167                           ;iodemo.c: 21: {
   168                           ;iodemo.c: 22: if(TMR1IF)
   169  000E70  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
   170  000E72  EF3D  F007         	goto	u721
   171  000E76  EF3F  F007         	goto	u720
   172  000E7A                     u721:
   173  000E7A  EF44  F007         	goto	l859
   174  000E7E                     u720:
   175                           	line	24
   176                           ;iodemo.c: 23: {
   177                           ;iodemo.c: 24: TMR1IF=0;
   178  000E7E  909E               	bcf	c:(31984/8),(31984)&7	;volatile
   179                           	line	25
   180                           ;iodemo.c: 25: TMR1H=0xF0;
   181  000E80  0EF0               	movlw	low(0F0h)
   182  000E82  6ECF               	movwf	((c:4047)),c	;volatile
   183                           	line	26
   184                           ;iodemo.c: 26: update_ports();
   185  000E84  EC02  F007         	call	_update_ports	;wreg free
   186                           	line	27
   187                           	
   188  000E88                     l862:		; BSR set to: ?
   189                           
   190                           	line	28
   191                           	
   192  000E88                     l859:		; BSR set to: ?
   193                           
   194                           	line	20
   195  000E88  EF38  F007         	goto	l860
   196                           	global	start
   197  000E8C  EF0C  F000         	goto	start
   198                           	opt stack 0
   199                           GLOBAL __end_of_main
   200  000E90                     	__end_of_main:
   201                           	FNSIZE	_main,0,0
   202                           ; =============== function _main ends ==========
                                 ==
   203                           
   204                                   psect   text1,class=CODE,space=0,reloc=2
   205                           	line	29
   206                           
   207                           	opt lm
   208                           	signat	_main,88
   209                           	global	_update_ports
   210                           	global	??_update_ports
   211                           	global	?_update_ports
   212                           
   213                           ; *************** function _update_ports *******
                                 **********
   214                           ; Defined at:
   215                           ;		line 57 in file "../iodemo.c"
   216                           ; Parameters:
   217                           ;		None
   218                           ; Auto variables:
   219                           ;		None
   220                           ; Return value:
   221                           ;		type: void 
   222                           ;		size: 0
   223                           ; Registers used:
   224                           ;		wreg, status,2, status,0, tblptrl, tblptrh, t
                                 blptru, tablat
   225                           ; Tracked objects:
   226                           ;		On entry : 0/0
   227                           ;		On exit  : 0/0
   228                           ;		Unchanged: 0/0
   229                           ; Data sizes:
   230                           ;		Autos:    0
   231                           ;		Params:   0
   232                           ;		Temp:     1
   233                           ;		Total:    1
   234                           ; This function calls:
   235                           ;		Nothing
   236                           ; This function is called by:
   237                           ;		_main
   238                           ; This function uses a non-reentrant model
   239                           ; 
   240                           	file	"../iodemo.c"
   241                           	line	57
   242  000000                     	__size_of_update_ports	equ	__end_of_update_port
                                 s-_update_ports
   243                           ;iodemo.c: 56: void update_ports(void)
   244                           ;iodemo.c: 57: {
   245                           	
   246  000E04                     _update_ports:		; BSR set to: ?
   247                           
   248                           	opt stack 29
   249                           	line	60
   250                           ;iodemo.c: 58: static unsigned char index;
   251                           ;iodemo.c: 60: index++;
   252  000E04  2A00               	incf	((c:0)),c
   253                           	line	61
   254                           ;iodemo.c: 61: index&=0x07;
   255  000E06  0E07               	movlw	(07h)&0ffh
   256  000E08  1600               	andwf	((c:0)),c
   257                           	line	63
   258                           ;iodemo.c: 63: PORTA=LEDDISPLAY[index];
   259  000E0A  0E01               	movlw	low((_LEDDISPLAY))
   260  000E0C  2400               	addwf	((c:0)),c,w
   261  000E0E  6EF6               	movwf	tblptrl
   262  000E10  6AF7               	clrf	tblptrh
   263  000E12  0E0D               	movlw	high((_LEDDISPLAY))
   264  000E14  22F7               	addwfc	tblptrh
   265  000E16  6AF8               	clrf	tblptru
   266  000E18  0E00               	movlw	low highword(__mediumconst)
   267  000E1A  22F8               	addwfc	tblptru
   268  000E1C  0008               	tblrd	*
   269                           	
   270  000E1E  CFF5 FF80          	movff	tablat,(c:3968)	;volatile
   271                           	line	64
   272                           ;iodemo.c: 64: PORTC=LEDDISPLAY[index+1];
   273  000E22  C000 F100          	movff	(c:0),??_update_ports+0+0
   274  000E26  0E01               	movlw	01h
   275  000E28  0101               	movlb	1	; () banked
   276  000E2A  2700               	addwf	(??_update_ports+0+0)&0ffh
   277  000E2C  0E01               	movlw	low((_LEDDISPLAY))
   278  000E2E  0101               	movlb	1	; () banked
   279  000E30  2500               	addwf	(??_update_ports+0+0)&0ffh,w
   280  000E32  6EF6               	movwf	tblptrl
   281  000E34  6AF7               	clrf	tblptrh
   282  000E36  0E0D               	movlw	high((_LEDDISPLAY))
   283  000E38  22F7               	addwfc	tblptrh
   284  000E3A  6AF8               	clrf	tblptru
   285  000E3C  0E00               	movlw	low highword(__mediumconst)
   286  000E3E  22F8               	addwfc	tblptru
   287  000E40  0008               	tblrd	*
   288                           	
   289  000E42  CFF5 FF82          	movff	tablat,(c:3970)	;volatile
   290                           	line	66
   291                           ;iodemo.c: 66: PORTE=LEDDISPLAY[index+3];
   292  000E46  C000 F100          	movff	(c:0),??_update_ports+0+0
   293  000E4A  0E03               	movlw	03h
   294  000E4C  0101               	movlb	1	; () banked
   295  000E4E  2700               	addwf	(??_update_ports+0+0)&0ffh
   296  000E50  0E01               	movlw	low((_LEDDISPLAY))
   297  000E52  0101               	movlb	1	; () banked
   298  000E54  2500               	addwf	(??_update_ports+0+0)&0ffh,w
   299  000E56  6EF6               	movwf	tblptrl
   300  000E58  6AF7               	clrf	tblptrh
   301  000E5A  0E0D               	movlw	high((_LEDDISPLAY))
   302  000E5C  22F7               	addwfc	tblptrh
   303  000E5E  6AF8               	clrf	tblptru
   304  000E60  0E00               	movlw	low highword(__mediumconst)
   305  000E62  22F8               	addwfc	tblptru
   306  000E64  0008               	tblrd	*
   307                           	
   308  000E66  CFF5 FF84          	movff	tablat,(c:3972)	;volatile
   309                           	line	72
   310                           ;iodemo.c: 72: }
   311  000E6A                     l864:
   312                           			; BSR set to: ?
   313                           
   314  000E6A  0012               	return
   315                           	opt stack 0
   316                           GLOBAL __end_of_update_ports
   317  000E6C                     	__end_of_update_ports:
   318                           	FNSIZE	_update_ports,1,0
   319                           ; =============== function _update_ports ends ==
                                 ==========
   320                           
   321                           	signat	_update_ports,88
   322                           	global	_init
   323                           	global	??_init
   324                           	global	?_init
   325                           
   326                           ; *************** function _init ***************
                                 **
   327                           ; Defined at:
   328                           ;		line 32 in file "../iodemo.c"
   329                           ; Parameters:
   330                           ;		None
   331                           ; Auto variables:
   332                           ;		None
   333                           ; Return value:
   334                           ;		type: void 
   335                           ;		size: 0
   336                           ; Registers used:
   337                           ;		wreg, status,2
   338                           ; Tracked objects:
   339                           ;		On entry : 0/0
   340                           ;		On exit  : 0/0
   341                           ;		Unchanged: 0/0
   342                           ; Data sizes:
   343                           ;		Autos:    0
   344                           ;		Params:   0
   345                           ;		Temp:     0
   346                           ;		Total:    0
   347                           ; This function calls:
   348                           ;		Nothing
   349                           ; This function is called by:
   350                           ;		_main
   351                           ; This function uses a non-reentrant model
   352                           ; 
   353                                   psect   text2,class=CODE,space=0,reloc=2
   354                           
   355                           	opt lm
   356                           	file	"../iodemo.c"
   357                           	line	32
   358  000000                     	__size_of_init	equ	__end_of_init-_init
   359                           ;iodemo.c: 31: void init(void)
   360                           ;iodemo.c: 32: {
   361                           	
   362  000E90                     _init:		; BSR set to: ?
   363                           
   364                           	opt stack 29
   365                           	line	33
   366                           ;iodemo.c: 33: GIE=1;
   367  000E90  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
   368                           	line	34
   369                           ;iodemo.c: 34: IPEN=0;
   370  000E92  9ED0               	bcf	c:(32391/8),(32391)&7	;volatile
   371                           	line	36
   372                           ;iodemo.c: 36: T1CON=0x81;
   373  000E94  0E81               	movlw	low(081h)
   374  000E96  6ECD               	movwf	((c:4045)),c	;volatile
   375                           	line	37
   376                           ;iodemo.c: 37: TMR1IE=0;
   377  000E98  909D               	bcf	c:(31976/8),(31976)&7	;volatile
   378                           	line	39
   379                           ;iodemo.c: 39: ADCON1=0x0F;
   380  000E9A  0E0F               	movlw	low(0Fh)
   381  000E9C  6EC1               	movwf	((c:4033)),c	;volatile
   382                           	line	41
   383                           ;iodemo.c: 41: TRISA=0;
   384  000E9E  0E00               	movlw	low(0)
   385  000EA0  6E92               	movwf	((c:3986)),c	;volatile
   386                           	line	42
   387                           ;iodemo.c: 42: TRISB=0xFF;
   388  000EA2  6893               	setf	((c:3987)),c	;volatile
   389                           	line	43
   390                           ;iodemo.c: 43: TRISC=0;
   391  000EA4  0E00               	movlw	low(0)
   392  000EA6  6E94               	movwf	((c:3988)),c	;volatile
   393                           	line	51
   394                           ;iodemo.c: 51: RBPU=0;
   395  000EA8  9EF1               	bcf	c:(32655/8),(32655)&7	;volatile
   396                           	line	52
   397                           ;iodemo.c: 52: RBIE=1;
   398  000EAA  86F2               	bsf	c:(32659/8),(32659)&7	;volatile
   399                           	line	53
   400                           ;iodemo.c: 53: RBIF=0;
   401  000EAC  90F2               	bcf	c:(32656/8),(32656)&7	;volatile
   402                           	line	54
   403                           ;iodemo.c: 54: }
   404  000EAE                     l863:
   405                           			; BSR set to: ?
   406                           
   407  000EAE  0012               	return
   408                           	opt stack 0
   409                           GLOBAL __end_of_init
   410  000EB0                     	__end_of_init:
   411                           	FNSIZE	_init,0,0
   412                           ; =============== function _init ends ==========
                                 ==
   413                           
   414                           	signat	_init,88
   415                           	global	_ISR
   416                           	global	??_ISR
   417                           	global	?_ISR
   418                           
   419                           ; *************** function _ISR ****************
                                 *
   420                           ; Defined at:
   421                           ;		line 75 in file "../iodemo.c"
   422                           ; Parameters:
   423                           ;		None
   424                           ; Auto variables:
   425                           ;		direction   	       	type: unsigned char 
   426                           ; Return value:
   427                           ;		type: void 
   428                           ;		size: 0
   429                           ; Registers used:
   430                           ;		wreg, status,2, status,0
   431                           ; Tracked objects:
   432                           ;		On entry : 0/0
   433                           ;		On exit  : 0/0
   434                           ;		Unchanged: 0/0
   435                           ; Data sizes:
   436                           ;		Autos:    1
   437                           ;		Params:   0
   438                           ;		Temp:    17
   439                           ;		Total:   18
   440                           ; This function calls:
   441                           ;		Nothing
   442                           ; This function is called by:
   443                           ;		Interrupt level 2
   444                           ; This function uses a non-reentrant model
   445                           ; 
   446                                   psect   text3,class=CODE,space=0,reloc=2
   447                           
   448                           	opt lm
   449                           	file	"../iodemo.c"
   450                           	line	75
   451  000000                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   452                           ;iodemo.c: 74: void interrupt ISR(void)
   453                           ;iodemo.c: 75: {
   454                           	
   455  000D12                     _ISR:		; BSR set to: ?
   456                           
   457                           	opt stack 31
   458                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
   459                           	global	int_func
   460  000008                     int_func:
   461                                   psect   intcode
   462  000008  CFFA F105          	movff	pclat+0,??_ISR+4
   463  00000C  CFFB F106          	movff	pclat+1,??_ISR+5
   464  000010  CFE9 F107          	movff	fsr0l+0,??_ISR+6
   465  000014  EF89  F006         	goto	_ISR
   466                                   psect   text3
   467  000D12  CFEA F108          	movff	fsr0h+0,??_ISR+7
   468  000D16  CFE1 F109          	movff	fsr1l+0,??_ISR+8
   469  000D1A  CFE2 F10A          	movff	fsr1h+0,??_ISR+9
   470  000D1E  CFD9 F10B          	movff	fsr2l+0,??_ISR+10
   471  000D22  CFDA F10C          	movff	fsr2h+0,??_ISR+11
   472  000D26  CFF3 F10D          	movff	prodl+0,??_ISR+12
   473  000D2A  CFF4 F10E          	movff	prodh+0,??_ISR+13
   474  000D2E  CFF6 F10F          	movff	tblptrl+0,??_ISR+14
   475  000D32  CFF7 F110          	movff	tblptrh+0,??_ISR+15
   476  000D36  CFF8 F111          	movff	tblptru+0,??_ISR+16
   477  000D3A  CFF5 F112          	movff	tablat+0,??_ISR+17
   478                           	line	78
   479                           ;iodemo.c: 76: unsigned char direction;
   480                           ;iodemo.c: 78: if((RBIE)&&(RBIF))
   481  000D3E  A6F2               	btfss	c:(32659/8),(32659)&7	;volatile
   482  000D40  EFA4  F006         	goto	i2u51
   483  000D44  EFA6  F006         	goto	i2u50
   484  000D48                     i2u51:
   485  000D48  EFE5  F006         	goto	i2l866
   486  000D4C                     i2u50:
   487  000D4C  A0F2               	btfss	c:(32656/8),(32656)&7	;volatile
   488  000D4E  EFAB  F006         	goto	i2u61
   489  000D52  EFAD  F006         	goto	i2u60
   490  000D56                     i2u61:
   491  000D56  EFE5  F006         	goto	i2l866
   492  000D5A                     i2u60:
   493                           	line	80
   494                           ;iodemo.c: 79: {
   495                           ;iodemo.c: 80: direction=TRISC;
   496  000D5A  CF94 F101          	movff	(c:3988),(ISR@direction)	;volatile
   497                           	line	82
   498                           ;iodemo.c: 82: TRISC=0xFF;
   499  000D5E  6894               	setf	((c:3988)),c	;volatile
   500                           	line	84
   501                           ;iodemo.c: 84: switch((PORTB)&0xF0)
   502  000D60  EFBC  F006         	goto	i2l868
   503                           	line	86
   504                           ;iodemo.c: 85: {
   505                           ;iodemo.c: 86: case 0b00010000:
   506                           	
   507  000D64                     i2l869:		; BSR set to: ?
   508                           
   509                           	line	87
   510                           ;iodemo.c: 87: TRISA=PORTC;
   511  000D64  CF82 FF92          	movff	(c:3970),(c:3986)	;volatile
   512                           	line	88
   513                           ;iodemo.c: 88: break;
   514  000D68  EFE2  F006         	goto	i2l867
   515                           	line	89
   516                           ;iodemo.c: 89: case 0b00100000:
   517                           	
   518  000D6C                     i2l870:		; BSR set to: ?
   519                           
   520                           	line	90
   521                           ;iodemo.c: 90: direction=PORTC;
   522  000D6C  CF82 F101          	movff	(c:3970),(ISR@direction)	;volatile
   523                           	line	91
   524                           ;iodemo.c: 91: break;
   525  000D70  EFE2  F006         	goto	i2l867
   526                           	line	92
   527                           ;iodemo.c: 92: case 0b00110000:
   528                           	
   529  000D74                     i2l871:		; BSR set to: ?
   530                           
   531                           	line	94
   532                           ;iodemo.c: 94: break;
   533  000D74  EFE2  F006         	goto	i2l867
   534                           	line	84
   535                           	
   536  000D78                     i2l868:		; BSR set to: ?
   537                           
   538  000D78  CF81 F102          	movff	(c:3969),??_ISR+1+0	;volatile
   539  000D7C  0EF0               	movlw	0F0h
   540  000D7E  0101               	movlb	1	; () banked
   541  000D80  1702               	andwf	(??_ISR+1+0)&0ffh
   542  000D82  C102  F103         	movff	??_ISR+1+0,??_ISR+2+0
   543  000D86  0101               	movlb	1	; () banked
   544  000D88  6B04               	clrf	(??_ISR+2+0+1)&0ffh
   545  000D8A  0101               	movlb	1	; () banked
   546  000D8C  EFDC  F006         	goto	l30009
   547  000D90                     i2l30010:
   548  000D90  0101               	movlb	1	; () banked
   549  000D92  5103               	movf	(??_ISR+2+0)&0ffh,w
   550  000D94  0A10               	xorlw	16 ^ 0
   551  000D96  E0E6               	bz	i2l869
   552  000D98  0A30               	xorlw	32 ^ 16
   553  000D9A  E0E8               	bz	i2l870
   554  000D9C  0A10               	xorlw	48 ^ 32
   555  000D9E  E0EA               	bz	i2l871
   556  000DA0  0A70               	xorlw	64 ^ 48
   557  000DA2  E0E8               	bz	i2l871
   558  000DA4  0A10               	xorlw	80 ^ 64
   559  000DA6  E0E6               	bz	i2l871
   560  000DA8  0A30               	xorlw	96 ^ 80
   561  000DAA  E0E4               	bz	i2l871
   562  000DAC  0A10               	xorlw	112 ^ 96
   563  000DAE  E0E2               	bz	i2l871
   564  000DB0  0AF0               	xorlw	128 ^ 112
   565  000DB2  E0E0               	bz	i2l871
   566  000DB4  EFE2  F006         	goto	i2l867
   567                           
   568  000DB8                     l30009:
   569  000DB8  0101               	movlb	1	; () banked
   570  000DBA  5104               	movf	(??_ISR+2+1)&0ffh,w
   571  000DBC  0A00               	xorlw	0 ^ 0
   572+ 000DBE  E0E8               	bz	i2l30010
   573+ 000DC0  EFE2  F006         	goto	i2l867
   574                           
   575                           	line	111
   576                           	
   577  000DC4                     i2l867:		; BSR set to: ?
   578                           
   579                           	line	112
   580                           ;iodemo.c: 112: TRISC=direction;
   581  000DC4  C101  FF94         	movff	(ISR@direction),(c:3988)	;volatile
   582                           	line	113
   583                           ;iodemo.c: 113: RBIF=0;
   584  000DC8  90F2               	bcf	c:(32656/8),(32656)&7	;volatile
   585                           	line	114
   586                           	
   587  000DCA                     i2l866:		; BSR set to: ?
   588                           
   589                           	line	115
   590                           ;iodemo.c: 114: }
   591                           ;iodemo.c: 115: }
   592  000DCA                     i2l865:
   593                           			; BSR set to: ?
   594                           
   595  000DCA  C112  FFF5         	movff	??_ISR+17,tablat+0
   596  000DCE  C111  FFF8         	movff	??_ISR+16,tblptru+0
   597  000DD2  C110  FFF7         	movff	??_ISR+15,tblptrh+0
   598  000DD6  C10F  FFF6         	movff	??_ISR+14,tblptrl+0
   599  000DDA  C10E  FFF4         	movff	??_ISR+13,prodh+0
   600  000DDE  C10D  FFF3         	movff	??_ISR+12,prodl+0
   601  000DE2  C10C  FFDA         	movff	??_ISR+11,fsr2h+0
   602  000DE6  C10B  FFD9         	movff	??_ISR+10,fsr2l+0
   603  000DEA  C10A  FFE2         	movff	??_ISR+9,fsr1h+0
   604  000DEE  C109  FFE1         	movff	??_ISR+8,fsr1l+0
   605  000DF2  C108  FFEA         	movff	??_ISR+7,fsr0h+0
   606  000DF6  C107  FFE9         	movff	??_ISR+6,fsr0l+0
   607  000DFA  C106  FFFB         	movff	??_ISR+5,pclat+1
   608  000DFE  C105  FFFA         	movff	??_ISR+4,pclat+0
   609  000E02  0011               	retfie f
   610                           	opt stack 0
   611                           GLOBAL __end_of_ISR
   612  000E04                     	__end_of_ISR:
   613                           	FNSIZE	_ISR,18,0
   614                           ; =============== function _ISR ends ===========
                                 =
   615                           
   616                           	signat	_ISR,88
   617                           	FNCALL	_main,_init
   618                           	FNCALL	_main,_update_ports
   619                           	FNROOT	_main
   620                           	FNCALL	intlevel2,_ISR
   621                           	global	intlevel2
   622                           	FNROOT	intlevel2
   623                                   psect   smallconst,class=SMALLCONST,spac
                                 e=0,reloc=2
   624  000D00  00                 	db	0	;reserve
   625                           	global	_LEDDISPLAY
   626                           	line	10
   627  000D01                     _LEDDISPLAY:
   628  000D01  F8                 	db	low(0F8h)
   629  000D02  F1                 	db	low(0F1h)
   630  000D03  E3                 	db	low(0E3h)
   631  000D04  C7                 	db	low(0C7h)
   632  000D05  8F                 	db	low(08Fh)
   633  000D06  1F                 	db	low(01Fh)
   634  000D07  3E                 	db	low(03Eh)
   635  000D08  7C                 	db	low(07Ch)
   636  000D09  F8                 	db	low(0F8h)
   637  000D0A  F1                 	db	low(0F1h)
   638  000D0B  E3                 	db	low(0E3h)
   639  000D0C  C7                 	db	low(0C7h)
   640  000D0D  8F                 	db	low(08Fh)
   641  000D0E  1F                 	db	low(01Fh)
   642  000D0F  3E                 	db	low(03Eh)
   643  000D10  7C                 	db	low(07Ch)
   644                           	global	_LEDDISPLAY
   645                           	global	F10566
   646  000000                     F10566  equ     0
   647                           
   648                           	DABS	1,0,1	;F10566
   649                           	global	_A
   650                           	global	_A
   651  000000                     _A  equ     1
   652                           
   653                           	DABS	1,1,1	;_A
   654                           	global	_ADCON1
   655  000000                     _ADCON1	equ	0xFC1
   656                           	global	_PORTA
   657  000000                     _PORTA	equ	0xF80
   658                           	global	_PORTB
   659  000000                     _PORTB	equ	0xF81
   660                           	global	_PORTC
   661  000000                     _PORTC	equ	0xF82
   662                           	global	_PORTE
   663  000000                     _PORTE	equ	0xF84
   664                           	global	_T1CON
   665  000000                     _T1CON	equ	0xFCD
   666                           	global	_TMR1H
   667  000000                     _TMR1H	equ	0xFCF
   668                           	global	_TRISA
   669  000000                     _TRISA	equ	0xF92
   670                           	global	_TRISB
   671  000000                     _TRISB	equ	0xF93
   672                           	global	_TRISC
   673  000000                     _TRISC	equ	0xF94
   674                           	global	_GIE
   675  000000                     _GIE	equ	0x7F97
   676                           	global	_IPEN
   677  000000                     _IPEN	equ	0x7E87
   678                           	global	_RBIE
   679  000000                     _RBIE	equ	0x7F93
   680                           	global	_RBIF
   681  000000                     _RBIF	equ	0x7F90
   682                           	global	_RBPU
   683  000000                     _RBPU	equ	0x7F8F
   684                           	global	_TMR1IE
   685  000000                     _TMR1IE	equ	0x7CE8
   686                           	global	_TMR1IF
   687  000000                     _TMR1IF	equ	0x7CF0
   688  000D11  00                 	db 0	; dummy byte at the end
   689                           	psect	intsave_regs,class=BIGRAM,space=1
   690                           	PSECT	param1,class=BANK1,space=1
   691                           	GLOBAL	__Lparam1
   692                           	FNCONF	param1,??,?
   693                           	GLOBAL	__Labsbss0
   694  000000                     __Labsbss0	EQU	0
   695                           	GLOBAL	__Habsbss0
   696  000000                     __Habsbss0	EQU	2
   697                           GLOBAL	__Lparam, __Hparam
   698                           GLOBAL	__Lparam1, __Hparam1
   699  000000                     __Lparam	EQU	__Lparam1
   700  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Tue Apr 17 17:05:59 2012

                    _A 000001           _update_ports 0E04  
                  l860 0E70                    l862 0E88  
                  l863 0EAE                    l864 0E6A  
                  l859 0E88                    _GIE 007F97  
                  _ISR 0D12                    u720 0E7E  
                  u721 0E7A                   ?_ISR 0101  
                 _IPEN 007E87                   _RBIE 007F93  
                 _RBIF 007F90                   _RBPU 007F8F  
                 i2u50 0D4C                   i2u51 0D48  
                 i2u60 0D5A                   i2u61 0D56  
                 _main 0E6C                   _init 0E90  
                 fsr0h 000FEA                   fsr1h 000FE2  
                 fsr0l 000FE9                   fsr2h 000FDA  
                 fsr1l 000FE1                   fsr2l 000FD9  
                 pclat 000FFA                   prodh 000FF4  
                 prodl 000FF3                   start 0018  
                F10566 000000                  ??_ISR 0101  
                l30009 0DB8                  ?_main 0100  
                ?_init 0100                  _T1CON 000FCD  
                i2l870 0D6C                  i2l871 0D74  
                i2l865 0DCA                  i2l866 0DCA  
                i2l867 0DC4                  i2l868 0D78  
                i2l869 0D64                  _TMR1H 000FCF  
                _PORTA 000F80                  _PORTB 000F81  
                _PORTC 000F82                  _PORTE 000F84  
                _TRISA 000F92                  _TRISB 000F93  
                _TRISC 000F94                  tablat 000FF5  
         __end_of_main 0E90           __end_of_init 0EB0  
               ??_main 0100                 ??_init 0100  
        __activetblptr 000003                 _ADCON1 000FC1  
               _TMR1IE 007CE8                 _TMR1IF 007CF0  
               __Ldata 000000           __mediumconst 0D12  
               tblptrh 000FF7                 tblptrl 000FF6  
               tblptru 000FF8             __accesstop 0060  
              i2l30010 0D90                __Hparam 0113  
              __Lparam 0100                __ramtop 0D00  
        __Lmediumconst 0D12                int_func 0008  
        ?_update_ports 0100           ISR@direction 0101  
          __end_of_ISR 0E04              __Habsbss0 000002  
            __Labsbss0 000000         ??_update_ports 0100  
          __smallconst 0D00   __end_of_update_ports 0E6C  
             __Hparam1 0113               __Lparam1 0100  
         __Lsmallconst 0D00             _LEDDISPLAY 0D01  
             intlevel2 0EB0  
